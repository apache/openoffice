/**************************************************************
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *************************************************************/

#include "LinePropertyPanel.hrc"
#include <sfx2/sidebar/ResourceDefinitions.hrc>
#include <svx/dialogs.hrc>
#include "helpid.hrc"

Control RID_SIDEBAR_LINE_PANEL
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;
	Text = "Line" ;

	Size = MAP_APPFONT(
		PROPERTYPAGE_WIDTH,
		SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*4 + TEXT_CONTROL_SPACING_VERTICAL*4 + TOOLBOX_HEIGHT*3 + CONTROL_SPACING_VERTICAL*3 + CBOX_HEIGHT + SECTIONPAGE_MARGIN_VERTICAL_BOT ) ;
	HelpID = HID_PROPERTYPANEL_LINE_SECTION ;

	FixedText FT_WIDTH
	{
		Pos = MAP_APPFONT( SECTIONPAGE_MARGIN_HORIZONTAL, SECTIONPAGE_MARGIN_VERTICAL_TOP ) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH, TEXT_HEIGHT ) ;
		Text [ en-US ] = "~Width:" ;
	};
	ToolBox TB_WIDTH
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT (SECTIONPAGE_MARGIN_HORIZONTAL, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT + TEXT_CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH ,TOOLBOX_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_TBX_WIDTH ;
		Text = "Width" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_WIDTH ;
				DropDown = TRUE ;
				Text [ en-US ] = "Width" ;
				HelpID = HID_PPROPERTYPANEL_LINE_TBI_WIDTH ;
			};
		};
	};
	String STR_QH_TB_WIDTH
	{
		Text [ en-US ] = "Select the width of the line." ;
	};

	FixedText FT_COLOR
	{
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 3, SECTIONPAGE_MARGIN_VERTICAL_TOP ) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH, TEXT_HEIGHT ) ;
		Text [ en-US ] = "~Color:" ;
	};
	ToolBox TB_COLOR
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT (SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 4, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT + TEXT_CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH ,TOOLBOX_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_TBX_COLOR;
		Text = "Color" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_COLOR ;
				DropDown = TRUE ;
				Text [ en-US ] = "Color" ;
				HelpID = HID_PPROPERTYPANEL_LINE_TBI_COLOR ;
			};
		};
	};
	String STR_QH_TB_COLOR
	{
		Text [ en-US ] = "Select the color of the line." ;
	};

	FixedText FT_STYLE
	{
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT + TEXT_CONTROL_SPACING_VERTICAL + TOOLBOX_HEIGHT + CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH, TEXT_HEIGHT ) ;
		Text [ en-US ] = "~Style:" ;
	};
	ListBox LB_STYLE
	{
		Border = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_TBX_STYLE ;
		Pos = MAP_APPFONT (SECTIONPAGE_MARGIN_HORIZONTAL, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*2 + TEXT_CONTROL_SPACING_VERTICAL*2 + TOOLBOX_HEIGHT + CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH ,LISTBOX_HEIGHT ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		DDExtraWidth = TRUE ;
		QuickHelpText [ en-US ] = "Select the style of the line." ;
	};

	FixedText FT_TRANSPARENT
	{
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 3, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT + TEXT_CONTROL_SPACING_VERTICAL + TOOLBOX_HEIGHT + CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH, TEXT_HEIGHT ) ;
		Text [ en-US ] = "~Transparency:" ;
	};
	MetricField MF_TRANSPARENT
	{
		Border = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_MTR_TRANCEPARENCE ;
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 3, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*2 + TEXT_CONTROL_SPACING_VERTICAL*2 + TOOLBOX_HEIGHT + CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT ( TOOLBOX_WIDTH + 1, 12 ) ;
		TabStop = TRUE ;
		Repeat = TRUE ;
		Spin = TRUE ;
		Maximum = 100 ;
		StrictFormat = TRUE ;
		Unit = FUNIT_PERCENT ;
		Last = 100 ;
		SpinSize = 5 ;
		QuickHelpText [ en-US ] = "Specify the transparency of the line." ;
	};

	FixedText FT_ARROW
	{
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*2 + TEXT_CONTROL_SPACING_VERTICAL*2 + TOOLBOX_HEIGHT*2 + CONTROL_SPACING_VERTICAL*2) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH * 2 + 3, TEXT_HEIGHT ) ;
		Text [ en-US ] = "~Arrow:" ;
	};
	ListBox LB_START
	{
		Border = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_LB_START;
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*3 + TEXT_CONTROL_SPACING_VERTICAL*3 + TOOLBOX_HEIGHT*2 + CONTROL_SPACING_VERTICAL*2 ) ;
		Size = MAP_APPFONT ( TOOLBOX_WIDTH, LISTBOX_HEIGHT ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		DDExtraWidth = TRUE ;
		QuickHelpText [ en-US ] = "Select the style of the beginning arrowhead." ;
	};
	ListBox LB_END
	{
		Border = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_LB_END ;
		Pos = MAP_APPFONT ( SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 3, SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*3 + TEXT_CONTROL_SPACING_VERTICAL*3 + TOOLBOX_HEIGHT*2 + CONTROL_SPACING_VERTICAL*2 ) ;
		Size = MAP_APPFONT ( TOOLBOX_WIDTH + 1, LISTBOX_HEIGHT ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		DDExtraWidth = TRUE ;
		QuickHelpText [ en-US ] = "Select the style of the ending arrowhead." ;
	};

	FixedText FT_EDGESTYLE
	{
		Pos = MAP_APPFONT (
			SECTIONPAGE_MARGIN_HORIZONTAL,
			SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*3 + TEXT_CONTROL_SPACING_VERTICAL*3 + TOOLBOX_HEIGHT*3 + CONTROL_SPACING_VERTICAL*3) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH * 2 + 3, TEXT_HEIGHT ) ;
		Text [ en-US ] = "~Corner style" ;
	};
	ListBox LB_EDGESTYLE
	{
		HelpID = HID_PPROPERTYPANEL_LINE_LB_EDGESTYLE ;
		Border = TRUE ;
		Pos = MAP_APPFONT (
			SECTIONPAGE_MARGIN_HORIZONTAL ,
			SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*4 + TEXT_CONTROL_SPACING_VERTICAL*4 + TOOLBOX_HEIGHT*3 + CONTROL_SPACING_VERTICAL*3 ) ;
		Size = MAP_APPFONT ( TOOLBOX_WIDTH, LISTBOX_HEIGHT ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		DDExtraWidth = TRUE ;
		QuickHelpText [ en-US ] = "Select the style of the edge connections." ;
		StringList [ en-US ] =
		{
			< "Rounded" ; Default ;	> ;
			< "- none -" ;			> ;
			< "Mitered" ;			> ;
			< "Beveled" ;			> ;
		};
	};
	FixedText FT_CAPSTYLE
	{
		Pos = MAP_APPFONT (
			SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 3,
			SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*3 + TEXT_CONTROL_SPACING_VERTICAL*3 + TOOLBOX_HEIGHT*3 + CONTROL_SPACING_VERTICAL*3) ;
		Size = MAP_APPFONT (TOOLBOX_WIDTH * 2 + 3, TEXT_HEIGHT ) ;
		Text [ en-US ] = "Ca~p style" ;
	};
	ListBox LB_CAPSTYLE
	{
		HelpID = HID_PPROPERTYPANEL_LINE_LB_CAPSTYLE ;
		Border = TRUE ;
		Pos = MAP_APPFONT (
			SECTIONPAGE_MARGIN_HORIZONTAL + TOOLBOX_WIDTH + 3,
			SECTIONPAGE_MARGIN_VERTICAL_TOP + TEXT_HEIGHT*4 + TEXT_CONTROL_SPACING_VERTICAL*4 + TOOLBOX_HEIGHT*3 + CONTROL_SPACING_VERTICAL*3 ) ;
		Size = MAP_APPFONT ( TOOLBOX_WIDTH, LISTBOX_HEIGHT ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		DDExtraWidth = TRUE ;
		QuickHelpText [ en-US ] = "Select the style of the line caps." ;
		StringList [ en-US ] =
		{
			< "Flat" ; Default ;	> ; // Same string as in Excel
			< "Round" ;				> ;
			< "Square" ;			> ;
		};
	};

	Image IMG_COLOR
	{
		ImageBitmap = Bitmap{File = "symphony/Line_color.png" ;};
	};
	Image IMG_COLOR_NO
	{
		ImageBitmap = Bitmap{File = "symphony/no color.png" ;};
	};

	Image IMG_NONE_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/blank.png" ;};
	};

	//WIDTH ICON
	Image IMG_WIDTH1_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width1.png" ;};
	};
	Image IMG_WIDTH2_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width2.png" ;};
	};
	Image IMG_WIDTH3_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width3.png" ;};
	};
	Image IMG_WIDTH4_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width4.png" ;};
	};
	Image IMG_WIDTH5_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width5.png" ;};
	};
	Image IMG_WIDTH6_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width6.png" ;};
	};
	Image IMG_WIDTH7_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width7.png" ;};
	};
	Image IMG_WIDTH8_ICON
	{
		ImageBitmap = Bitmap{File = "symphony/width8.png" ;};
	};

	//high contrast for line width
	//WIDTH ICON
	Image IMG_WIDTH1_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width1_h.png" ;};
	};
	Image IMG_WIDTH2_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width2_h.png" ;};
	};
	Image IMG_WIDTH3_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width3_h.png" ;};
	};
	Image IMG_WIDTH4_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width4_h.png" ;};
	};
	Image IMG_WIDTH5_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width5_h.png" ;};
	};
	Image IMG_WIDTH6_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width6_h.png" ;};
	};
	Image IMG_WIDTH7_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width7_h.png" ;};
	};
	Image IMG_WIDTH8_ICON_H
	{
		ImageBitmap = Bitmap{File = "symphony/width8_h.png" ;};
	};
};
Control RID_POPUPPANEL_LINEPAGE_COLOR
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;
	Size = MAP_APPFONT ( POPUP_COLOR_PICKER_WIDTH, POPUP_COLOR_PICKER_HEIGHT ) ;

	Control VS_COLOR
	{
		HelpId = HID_PPROPERTYPANEL_LINE_VS_COLOR ;
		Hide = TRUE ;
		Pos = MAP_APPFONT ( OFFSET_X, OFFSET_Y ) ;
		Size = MAP_APPFONT ( POPUP_COLOR_PICKER_WIDTH - OFFSET_X * 2, POPUP_COLOR_PICKER_HEIGHT - OFFSET_Y * 2) ;
		TabStop = TRUE ;
		Text = "Color" ;
	};
};
Control RID_POPUPPANEL_LINEPAGE_STYLE
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;

	Size = MAP_APPFONT(
		POPUPPANEL_MARGIN_SMALL * 2 + POPUP_BORDER_WIDTH ,
		13 + POPUP_BORDER_HEIGHT + POPUPPANEL_MARGIN_SMALL * 2 + POPUPPANEL_MARGIN_LARGE) ;

	Control VS_STYLE
	{
		HelpId = HID_PPROPERTYPANEL_LINE_VS_STYLE ;
		Hide = TRUE ;
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL + OFFSET_X, POPUPPANEL_MARGIN_SMALL + OFFSET_Y ) ;
		Size = MAP_APPFONT ( 93, 13 * 12) ;
		TabStop = TRUE ;
		Text = "Style" ;
	};

	PushButton PB_OPTIONS
	{
		HelpId = HID_PPROPERTYPANEL_LINE_BTN_STYLE ;
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_LARGE + OFFSET_X, POPUPPANEL_MARGIN_SMALL * 2 + OFFSET_Y ) ;
		Size = MAP_APPFONT ( 93, 13 ) ;
		TabStop = TRUE ;
		Text [ en-US ] = "~More Options..." ;
	};
};
Control RID_POPUPPANEL_LINEPAGE_WIDTH
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;

	Size = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL * 2 + POPUP_BORDER_WIDTH + 80, POPUPPANEL_MARGIN_SMALL + POPUPPANEL_MARGIN_LARGE + POPUP_BORDER_WIDTH + 12 * 9 + POPUPPANEL_MARGIN_SMALL * 2 + TEXT_HEIGHT + (POPUPPANEL_MARGIN_LARGE * 2 + TEXT_HEIGHT + 12 + TEXT_CONTROL_SPACING_VERTICAL)) ;

	Control VS_WIDTH
	{
		HelpId = HID_PPROPERTYPANEL_LINE_VS_WIDTH ;
		Hide = TRUE ;
		Pos = MAP_APPFONT( POPUPPANEL_MARGIN_SMALL + OFFSET_X, POPUPPANEL_MARGIN_SMALL + OFFSET_Y ) ;
		Size = MAP_APPFONT ( 80, 12 * 9);
		TabStop = TRUE ;
		Text = "Width" ;
	};
	FixedText FT_CUSTOME
	{
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_LARGE + OFFSET_X, POPUPPANEL_MARGIN_SMALL + OFFSET_Y + 12 * 9 + POPUPPANEL_MARGIN_SMALL ) ;
		Size = MAP_APPFONT ( 80, TEXT_HEIGHT ) ;
		Text [ en-US ] = "Custom:" ;
	};
	FixedText FT_LINE_WIDTH
	{
		Pos = MAP_APPFONT ( CUSTOM_X + POPUPPANEL_MARGIN_LARGE, CUSTOM_Y + POPUPPANEL_MARGIN_LARGE) ;
		Size = MAP_APPFONT ( 74 - POPUPPANEL_MARGIN_LARGE * 2, TEXT_HEIGHT ) ;
		Text [ en-US ] = "Line ~width:" ;
	};
	MetricField MF_WIDTH
	{
		Border = TRUE ;
		HelpID = HID_PPROPERTYPANEL_LINE_MTR_WIDTH ;
		Pos = MAP_APPFONT ( CUSTOM_X + POPUPPANEL_MARGIN_LARGE, CUSTOM_Y + POPUPPANEL_MARGIN_LARGE + TEXT_HEIGHT + TEXT_CONTROL_SPACING_VERTICAL) ;
		Size = MAP_APPFONT ( 40, 12 ) ;
		TabStop = TRUE ;
		Right = TRUE ;
		Repeat = TRUE ;
		Spin = TRUE ;
		Maximum = 5000 ;
		StrictFormat = TRUE ;
		DecimalDigits = 2 ;
		Value = 1 ;
		Unit = FUNIT_MM ;
		Last = 5000 ;
		SpinSize = 10 ;
		QuickHelpText [ en-US ] = "Specify the width of the line." ;
	};

	Image IMG_WIDTH_CUSTOM
	{
		ImageBitmap = Bitmap{File = "symphony/last_custom_common.png" ;};
	};
	Image IMG_WIDTH_CUSTOM_GRAY
	{
		ImageBitmap = Bitmap{File = "symphony/last_custom_common_grey.png" ;};
	};
	String STR_WIDTH_LAST_CUSTOM
	{
		Text [ en-US ] = "Last Custom Value" ;
	};
	String STR_PT
	{
		Text [ en-US ] = "pt" ;
	};
};

// ********************************************************************** EOF
