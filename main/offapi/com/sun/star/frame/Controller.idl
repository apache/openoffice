/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_Controller_idl__
#define __com_sun_star_frame_Controller_idl__

#ifndef __com_sun_star_frame_XController_idl__
#include <com/sun/star/frame/XController.idl>
#endif

#ifndef __com_sun_star_frame_XDispatchProvider_idl__
#include <com/sun/star/frame/XDispatchProvider.idl>
#endif

#ifndef __com_sun_star_awt_XWindow_idl__
#include <com/sun/star/awt/XWindow.idl>
#endif

#ifndef __com_sun_star_ui_XContextMenuInterception_idl__
#include <com/sun/star/ui/XContextMenuInterception.idl>
#endif

#ifndef __com_sun_star_awt_XUserInputInterception_idl__
#include <com/sun/star/awt/XUserInputInterception.idl>
#endif

#ifndef __com_sun_star_view_XSelectionSupplier_idl__
#include <com/sun/star/view/XSelectionSupplier.idl>
#endif

#ifndef __com_sun_star_datatransfer_XTransferableSupplier_idl__
#include <com/sun/star/datatransfer/XTransferableSupplier.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** is an abstract service for a component which offers a deeper integration of
    desktop components than a <type scope="com::sun::star::awt">XWindow</type>
    can offer

    <p>
    Such components can be loaded into a <type>Frame</type> inside a <type>Desktop</type>
    environment. A controller is a richer component then a pure window, but full featured
    components need a <type>XModel</type> interface too.
    <br>
    (see service <type scope="com::sun::star::document">OfficeDocument</type> for further information)
    <p>

    @see com::sun::star::document::OfficeDocument
 */
published service Controller
{
    //-------------------------------------------------------------------------
    /** with this interface, components viewed in a <type>Frame</type> can serve
        events (by supplying dispatches)
     */
    interface XController;

    //-------------------------------------------------------------------------
    /** for certain functions which are useful at the UI

        <p>
        Mostly used by the <type>Frame</type> service, which contains this
        controller object. There will be an interception mechanism for dispatches
        available too.
        </p>

        @see XDispatch
        @see XDispatchProviderInterception
     */
    interface XDispatchProvider;

    //-------------------------------------------------------------------------
    /** this interface enables the controller to get interceptors registered that
        change context menue or prevent them from being executed

        <p>
        Don't mix it with <type>XDispatchProviderInterception</type> which
        intercept calls of <member>XDispatch::dispatch()</member>.
        </p>
     */
    [optional] interface com::sun::star::ui::XContextMenuInterception;

    //-------------------------------------------------------------------------
    /** makes it possible to intercept keyboard and mouse input.
     */
    [optional] interface com::sun::star::awt::XUserInputInterception;

    //-------------------------------------------------------------------------
    /** makes it possible to access and change the selection in a view
     */
    [optional] interface com::sun::star::view::XSelectionSupplier;

    //-------------------------------------------------------------------------
    /** makes it possible to work with clipboard data
     */
    [optional] interface com::sun::star::datatransfer::XTransferableSupplier;
};

//=============================================================================

}; }; }; };

#endif
