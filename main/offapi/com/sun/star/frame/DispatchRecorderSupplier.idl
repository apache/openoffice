/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_DispatchRecorderSupplier_idl__
#define __com_sun_star_frame_DispatchRecorderSupplier_idl__

#ifndef __com_sun_star_frame_XDispatchRecorderSupplier_idl__
#include <com/sun/star/frame/XDispatchRecorderSupplier.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** provides a <type>DispatchRecorder</type>

    <p>
    This supplier regulate macro recording of <member>XDispatch::dispatch()</member>
    calls. For that it capsulate a reference to a <type>DispatchRecorder</type>.
    Such recorder is used internally and can be used externally too.
    A supplier will be available on a <type>Frame</type> if recording was enabled,
    otherwise not. A frame supports a special property for that.
    This modular concept of recorder, supplier and frame makes it possible to
    implement local recording on one frame; global recording by using all currently
    opened frames or only some of them; and so on.
    </p>

    @see DispatchRecorder
    @see Frame
    @since OpenOffice 1.1.2
 */
published service DispatchRecorderSupplier
{
	//-------------------------------------------------------------------------
    /** provides access to a <type>DispatchRecorder</type> and helps on recording
	 */
    interface com::sun::star::frame::XDispatchRecorderSupplier;
};

//=============================================================================

}; }; }; };

#endif
