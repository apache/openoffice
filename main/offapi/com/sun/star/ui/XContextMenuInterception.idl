/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ui_XContextMenuInterception_idl__
#define __com_sun_star_ui_XContextMenuInterception_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

module com {  module sun {  module star {  module ui {


 published interface XContextMenuInterceptor;
/** This interface enables an object to get interceptors registered that
 change context menue or prevent them from being executed.
 */
published interface XContextMenuInterception : ::com::sun::star::uno::XInterface
{
    /** registers an <type>XContextMenuInterceptor</type>, which will become
		the first interceptor in the chain of registered interceptors.
	 */

    void registerContextMenuInterceptor( [in]XContextMenuInterceptor Interceptor);
    /** removes an <type>XContextMenuInterceptor</type> which was previously registered
        using <member>XContextMenuInterception::registerContextMenuInterceptor</member>.

		<p>The order of removals is arbitrary. It is not necessary to remove the last
		registered interceptor first.</p>
	 */
    void releaseContextMenuInterceptor( [in]XContextMenuInterceptor Interceptor);
};
}; }; }; };
#endif
