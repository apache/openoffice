/**************************************************************
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *************************************************************/



#ifndef __com_sun_star_report_XReportControlModel_idl__
#define __com_sun_star_report_XReportControlModel_idl__

#ifndef __com_sun_star_report_XReportComponent_idl__
#include <com/sun/star/report/XReportComponent.idl>
#endif
#ifndef __com_sun_star_report_XReportControlFormat_idl__
#include <com/sun/star/report/XReportControlFormat.idl>
#endif
#ifndef __com_sun_star_container_XContainer_idl__
#include <com/sun/star/container/XContainer.idl>
#endif
#ifndef __com_sun_star_container_XIndexContainer_idl__
#include <com/sun/star/container/XIndexContainer.idl>
#endif
#ifndef __com_sun_star_report_XFormatCondition_idl__
#include <com/sun/star/report/XFormatCondition.idl>
#endif

//=============================================================================

 module com { module sun { module star { module report {

//=============================================================================
published interface XReportControlModel
{
	/** allows the creation of sub reports.
	*/
	interface XReportComponent;

	interface XReportControlFormat;

	/** allows to register listeners to be notified of changes in the container.
	*/
	interface com::sun::star::container::XContainer;

	/** gives access to the <type scope="com::sun::star::report">XFormatCondition</type> elements by index.
	*/
	interface com::sun::star::container::XIndexContainer;

	/** Creates a format condition.
		@return
			   report component
	*/
	XFormatCondition createFormatCondition() raises( com::sun::star::uno::Exception );


	/** Specifies which content should be shown.
		The value can be <br/>
		<li>the name of a database column. The format to use is field:[name] </li>
		<li>the name of a function defined in the report or a group. The format to use is rpt:[functionName]</li>
		<li>an expression like rpt:24+24-47</li>
		@see https://wiki.openoffice.org/wiki/SUN_Report_Builder
		@see https://wiki.openoffice.org/wiki/SUN_Report_Builder#Syntax
		@see https://wiki.openoffice.org/wiki/Base/Reports/Functions
	*/
	[attribute,bound] string DataField
	{
		set raises ( com::sun::star::lang::IllegalArgumentException,com::sun::star::beans::UnknownPropertyException );
		get raises ( com::sun::star::beans::UnknownPropertyException );
	};

	/** Specifies that the element gets printed when the group changes.
		The default value is <FALSE/>.
	*/
	[attribute,bound] boolean PrintWhenGroupChange
	{
		set raises ( com::sun::star::beans::UnknownPropertyException );
		get raises ( com::sun::star::beans::UnknownPropertyException );
	};

	/** Describes the print expression of the report control model.
		If the expression evaluates to true than the report control model will be printed otherwise not.
	*/
	[attribute,bound] string ConditionalPrintExpression
	{
		set raises ( com::sun::star::beans::UnknownPropertyException );
		get raises ( com::sun::star::beans::UnknownPropertyException );
	};
};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

