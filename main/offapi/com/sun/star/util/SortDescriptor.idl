/**************************************************************
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *************************************************************/


#ifndef __com_sun_star_util_SortDescriptor_idl__ 
#define __com_sun_star_util_SortDescriptor_idl__ 
  
#ifndef __com_sun_star_beans_XPropertySet_idl__ 
#include <com/sun/star/beans/XPropertySet.idl> 
#endif 
 
#ifndef __com_sun_star_lang_Locale_idl__ 
#include <com/sun/star/lang/Locale.idl> 
#endif 
 
//============================================================================= 
 
module com {  module sun {  module star {  module util {  
 
//============================================================================= 
 
/** specifies the properties which can be used to describe
	a sort order applied to an XSortable.
	
	@see XSortable

    @deprecated
 */
published service SortDescriptor
{ 
 	interface com::sun::star::beans::XPropertySet;
 
	//------------------------------------------------------------------------- 
	/** specifies if the case of letters is important when comparing entries.
	 */
        [property] boolean IsCaseSensitive; 

 	//------------------------------------------------------------------------- 
	/** specifies the sorting order.
            
            The sorting order may be defined for separate keys in specific
            implementations. For those this property may not need to be set.
            
            @see <type scope"com::sun::star::text">TextSortDescriptor</type>
	 */
        [optional, property] boolean SortAscending; 

 	//------------------------------------------------------------------------- 
	/** specifies if the columns are sorted.
		
		<dl>
		<dt>
		<TRUE/>
		</dt>
		<dd>The columns are sorted.
		
		</dd>
		<dt>
		<FALSE/>
		</dt>
		<dd>The rows are sorted.
		</dd>
		</dl>
	 */
	[property] boolean SortColumns; 
 
 	//------------------------------------------------------------------------- 
	/** specifies the locale for the compare operator (collator).
	 */
	[property] com::sun::star::lang::Locale CollatorLocale;

 	//------------------------------------------------------------------------- 
	/** specifies the algorithm for the compare operator (collator).

            The collator algorithm may be defined for separate keys in specific
            implementations. For those this property may not need to be set.
            
            @see <type scope"com::sun::star::text">TextSortDescriptor</type>
         
            @see com::sun::star::i18n::XCollator
	 */
        [optional, property] string CollatorAlgorithm;
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
