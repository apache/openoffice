/**************************************************************
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *************************************************************/


#ifndef __com_sun_star_util_XModifiable2_idl__
#define __com_sun_star_util_XModifiable2_idl__

#ifndef __com_sun_star_util_XModifiable_idl__
#include <com/sun/star/util/XModifiable.idl>
#endif

#ifndef __com_sun_star_beans_PropertyVetoException_idl__
#include <com/sun/star/beans/PropertyVetoException.idl>
#endif


//=============================================================================

module com {  module sun {  module star {  module util {

//=============================================================================

/** allows to control modifiable state change.

    <p>
    This interface allows to prevent changing of the modified state of the
    object. It is introduced for performance optimizations, to allow to prevent
    unnecessary updates, for example while importing a document.
    Please use this interface very carefully.
    </p>
 */
published interface XModifiable2: com::sun::star::util::XModifiable
{
    //-------------------------------------------------------------------------
    /** disable possibility to change modified state of the document

        @returns the value that says whether the modified state change was
                enabled before the call
            <TRUE/> the changing of the modified state was already disabled
            <FALSE/> the changing of the modified state was enabled

     */
    boolean disableSetModified();

    //-------------------------------------------------------------------------
    /** enable possibility to change modified state of the document

        @returns the value that says whether the modified state change was
                enabled before the call
            <TRUE/> the changing of the modified state was disabled
            <FALSE/> the changing of the modified state was already enabled
     */
    boolean enableSetModified();

    //-------------------------------------------------------------------------
    /** allows to detect whether the modified state change is enabled
     */
    boolean isSetModifiedEnabled();
};

//=============================================================================

}; }; }; };

#endif

