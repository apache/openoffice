<?xml version="1.0" encoding="UTF-8"?>
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XMailMergeBroadcaster" script:language="StarBasic">

'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************



'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'	Global FUNCTION XMailMergeEvent()
'   This function fires an event which causes a listener call


'*************************************************************************

' Be sure that all variables are dimensioned:
option explicit

	Dim bCB1 as Boolean
	Dim bCB2 as Boolean


Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XMailMergeBroadcaster
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
	Dim oListener1 as Object
	Dim oListener2 as Object

    Out.Log("create two listeners")
    oListener1 = createUNOListener("CB1_", "com.sun.star.text.XMailMergeListener")
    oListener2 = createUNOListener("CB2_", "com.sun.star.text.XMailMergeListener")

    Test.StartMethod("addMailMergeEventListener()")
	bCB1 = FALSE
	bCB2 = FALSE
	bOK = TRUE
	oObj.addMailMergeEventListener(oListener1)
	oObj.addMailMergeEventListener(oListener2)
    XMailMergeEvent()
	out.dbg("call oObj.execute()")
	out.dbg("Listener1: " + bCB1 + " ; Listener2: " + bCB2)
	bOK = bOK AND bCB1 AND bCB2
    Test.MethodTested("addMailMergeEventListener()", bOK)
	
    Test.StartMethod("removeMailMergeEventListener()")
	bCB1 = FALSE
	bCB2 = FALSE
	bOK = TRUE
	out.dbg("remove Listener1")
	oObj.removeMailMergeEventListener(oListener1)
	out.dbg("call oObj.execute()")
    XMailMergeEvent()
	out.dbg("Listener1: " + bCB1 + " ; Listener2: " + bCB2)
	bOK = bOK AND NOT bCB1 AND bCB2
    Test.MethodTested("removeMailMergeEventListener()", bOK)
	

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub

Sub CB1_notifyMailMergeEvent()
	out.dbg("CB1_notifyMailMergeEvent() was clled.")
	bCB1 = TRUE
end Sub
 
Sub CB2_notifyMailMergeEvent()
	out.dbg("CB2_notifyMailMergeEvent() was clled.")
	bCB2 = TRUE
end Sub
 
</script:module>
